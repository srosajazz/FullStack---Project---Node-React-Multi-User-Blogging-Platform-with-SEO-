{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport { API } from '../config'; // create signup a new user\n\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; // create signin a new user\n\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //. set cookie\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    setCookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (process.browser) {\n    Cookie.remove.remove(key, {\n      expires: 1\n    });\n  }\n}; //. get cookie\n\nexport const getCookie = key => {\n  if (process.browser) {\n    Cookie.get(key, {});\n  }\n}; //  localStorage\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/sergiorosa_local/Desktop/BlogSEO/frontend/actions/auth.js"],"names":["fetch","cookie","API","signup","user","method","headers","Accept","body","then","response","json","catch","err","console","log","signin","setCookie","key","value","process","browser","set","expires","removeCookie","Cookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,GAAR,QAAkB,WAAlB,C,CAGA;;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAE5B,SAAOJ,KAAK,CAAE,GAAEE,GAAI,SAAR,EAAiB;AAEzBG,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAQzBC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AARmB,GAAjB,CAAL,CAUFK,IAVE,CAUGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAZE,EAaFC,KAbE,CAaIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbX,CAAP;AAcH,CAhBM,C,CAkBP;;AACA,OAAO,MAAMG,MAAM,GAAIZ,IAAD,IAAU;AAE5B,SAAOJ,KAAK,CAAE,GAAEE,GAAI,SAAR,EAAiB;AAEzBG,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAQzBC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AARmB,GAAjB,CAAL,CAUFK,IAVE,CAUGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAZE,EAaFC,KAbE,CAaIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAbX,CAAP;AAcH,CAhBM,C,CAkBP;;AACA,OAAO,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,MAAIC,OAAO,CAACC,OAAZ,EAAqB;AACjBJ,IAAAA,SAAS,CAACK,GAAV,CAAcJ,GAAd,EAAmBC,KAAnB,EAA0B;AACtBI,MAAAA,OAAO,EAAE;AADa,KAA1B;AAIH;AACJ,CAPM;AASP,OAAO,MAAMC,YAAY,GAAIN,GAAD,IAAS;AACjC,MAAIE,OAAO,CAACC,OAAZ,EAAqB;AACjBI,IAAAA,MAAM,CAACC,MAAP,CAAcA,MAAd,CAAqBR,GAArB,EAA0B;AACtBK,MAAAA,OAAO,EAAE;AADa,KAA1B;AAIH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMI,SAAS,GAAIT,GAAD,IAAS;AAC9B,MAAIE,OAAO,CAACC,OAAZ,EAAqB;AACjBI,IAAAA,MAAM,CAACG,GAAP,CAAWV,GAAX,EAAgB,EAAhB;AAIH;AACJ,CAPM,C,CAUP;;AACA,OAAO,MAAMW,eAAe,GAAG,CAACX,GAAD,EAAMC,KAAN,KAAgB;AAC3C,MAAGC,OAAO,CAACC,OAAX,EAAoB;AAChBS,IAAAA,YAAY,CAACC,OAAb,CAAqBb,GAArB,EAA0B,gBAAeC,KAAf,CAA1B;AACH;AACJ,CAJM;AAMP,OAAO,MAAMa,kBAAkB,GAAId,GAAD,IAAS;AACvC,MAAGE,OAAO,CAACC,OAAX,EAAoB;AAChBS,IAAAA,YAAY,CAACG,UAAb,CAAwBf,GAAxB;AACH;AACJ,CAJM,C,CAOP;;AACA,OAAO,MAAMgB,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACxCnB,EAAAA,SAAS,CAAC,OAAD,EAAUkB,IAAI,CAACE,KAAf,CAAT;AACAR,EAAAA,eAAe,CAAC,MAAD,EAASM,IAAI,CAAC/B,IAAd,CAAf;AACAgC,EAAAA,IAAI;AACP,CAJM;AAMP,OAAO,MAAME,MAAM,GAAG,MAAM;AACxB,MAAGlB,OAAO,CAACC,OAAX,EAAoB;AAChB,UAAMkB,aAAa,GAAGZ,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAIY,aAAJ,EAAmB;AACf,UAAGT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAH,EAAiC;AAC7B,eAAOC,IAAI,CAACC,KAAL,CAAWZ,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACP,OAFG,MAEG;AACH,eAAO,KAAP;AAEC;AACJ;AACJ;AACJ,CAZM","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport {API} from '../config';\n\n\n// create signup a new user\nexport const signup = (user) => {\n\n    return fetch(`${API}/signup`,{\n\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json()\n        })\n        .catch(err => console.log(err));\n};\n\n// create signin a new user\nexport const signin = (user) => {\n\n    return fetch(`${API}/signin`,{\n\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json()\n        })\n        .catch(err => console.log(err));\n};\n\n//. set cookie\nexport const setCookie = (key, value) => {\n    if (process.browser) {\n        setCookie.set(key, value, {\n            expires: 1,\n        });\n\n    }\n};\n\nexport const removeCookie = (key) => {\n    if (process.browser) {\n        Cookie.remove.remove(key, {\n            expires: 1,\n        });\n        \n    }\n};\n\n//. get cookie\nexport const getCookie = (key) => {\n    if (process.browser) {\n        Cookie.get(key, {\n            \n        });\n        \n    }\n};\n\n\n//  localStorage\nexport const setLocalStorage = (key, value) => {\n    if(process.browser) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n}\n\nexport const removeLocalStorage = (key) => {\n    if(process.browser) {\n        localStorage.removeItem(key,);\n    }\n}\n\n\n// autheticate user by pass data to cookie and localstorage\nexport const authenticate = (data, next) => {\n    setCookie('token', data.token);\n    setLocalStorage('user', data.user);\n    next();\n}\n\nexport const isAuth = () => {\n    if(process.browser) {\n        const cookieChecked = getCookie('token');\n        if (cookieChecked) {\n            if(localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n        } else {\n            return false;\n            \n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}
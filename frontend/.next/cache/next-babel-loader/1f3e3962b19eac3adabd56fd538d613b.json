{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var createBlog = function createBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //listBlogsWithCategoriesAndTags\n\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-TYpe': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // Show one blog\n\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //Related blogs\n\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-TYpe': 'application/json'\n    },\n    body: _JSON$stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // List\n\nexport var list = function list() {\n  return fetch(\"\".concat(API, \"/blogs\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //Remove blog\n\nexport var removeBlog = function removeBlog(slug, token) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //Update blog\n\nexport var updateBlog = function updateBlog(blog, token, slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // Query-search\n\nexport var listSearch = function listSearch(params) {\n  return fetch(\"\".concat(API, \"/blogs/search\"), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/sergiorosa_local/Desktop/BlogSEO/frontend/actions/blog.js"],"names":["fetch","API","createBlog","blog","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","singleBlog","slug","listRelated","list","removeBlog","updateBlog","listSearch","params"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\n\nexport const createBlog = (blog, token) => {\n    return fetch(`${API}/blog`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n        \n};\n\n//listBlogsWithCategoriesAndTags\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\n    const data = {\n        limit, skip\n    };\n    return fetch(`${API}/blogs-categories-tags`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-TYpe': 'application/json'\n        },\n        body: JSON.stringify(data),\n    \n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));      \n};\n\n// Show one blog\nexport const singleBlog = slug => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'GET'\n    })\n        .then(response => {\n        return response.json();\n})\n        .catch(err => console.log(err));\n};\n\n\n//Related blogs\nexport const listRelated = (blog) => {\n\n    return fetch(`${API}/blogs/related`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-TYpe': 'application/json'\n        },\n        body: JSON.stringify(blog),\n    \n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));      \n};\n\n// List\nexport const list= ()=> {\n    return fetch(`${API}/blogs`, {\n        method: 'GET'\n    })\n        .then(response => {\n        return response.json();\n})\n        .catch(err => console.log(err));\n};\n\n//Remove blog\n\nexport const removeBlog = (slug, token) => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n        \n};\n\n//Update blog\nexport const updateBlog = (blog, token, slug) => {\n    return fetch(`${API}/blog/${slug}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: blog\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n        \n};\n\n// Query-search\nexport const listSearch = (params)=> {\n    return fetch(`${API}/blogs/search`, {\n        method: 'GET'\n    })\n        .then(response => {\n        return response.json();\n})\n        .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}
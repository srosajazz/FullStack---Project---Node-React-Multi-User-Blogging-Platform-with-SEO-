{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport { API } from '../config'; // create signup a new user\n\nexport var signup = function signup(user) {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; // create signin a new user\n\nexport var signin = function signin(user) {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n}; //. set cookie\n\nexport var setCookie = function setCookie(key, value) {\n  if (process.browser) {\n    setCookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (process.browser) {\n    Cookie.remove.remove(key, {\n      expires: 1\n    });\n  }\n}; //. get cookie\n\nexport var getCookie = function getCookie(key) {\n  if (process.browser) {\n    Cookie.get(key, {});\n  }\n}; //  localStorage\n\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (process.browser) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n}; // autheticate user by pass data to cookie and localstorage","map":{"version":3,"sources":["/Users/sergiorosa_local/Desktop/BlogSEO/frontend/actions/auth.js"],"names":["fetch","cookie","API","signup","user","method","headers","Accept","body","then","response","json","err","console","log","signin","setCookie","key","value","process","browser","set","expires","removeCookie","Cookie","remove","getCookie","get","setLocalStorage","localStorage","setItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,GAAR,QAAkB,WAAlB,C,CAGA;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAE5B,SAAOJ,KAAK,WAAIE,GAAJ,cAAiB;AAEzBG,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAQzBC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AARmB,GAAjB,CAAL,CAUFK,IAVE,CAUG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAZE,WAaI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAbP,CAAP;AAcH,CAhBM,C,CAkBP;;AACA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACX,IAAD,EAAU;AAE5B,SAAOJ,KAAK,WAAIE,GAAJ,cAAiB;AAEzBG,IAAAA,MAAM,EAAE,MAFiB;AAGzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAHgB;AAQzBC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AARmB,GAAjB,CAAL,CAUFK,IAVE,CAUG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAZE,WAaI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAbP,CAAP;AAcH,CAhBM,C,CAkBP;;AACA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACrC,MAAIC,OAAO,CAACC,OAAZ,EAAqB;AACjBJ,IAAAA,SAAS,CAACK,GAAV,CAAcJ,GAAd,EAAmBC,KAAnB,EAA0B;AACtBI,MAAAA,OAAO,EAAE;AADa,KAA1B;AAIH;AACJ,CAPM;AASP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,GAAD,EAAS;AACjC,MAAIE,OAAO,CAACC,OAAZ,EAAqB;AACjBI,IAAAA,MAAM,CAACC,MAAP,CAAcA,MAAd,CAAqBR,GAArB,EAA0B;AACtBK,MAAAA,OAAO,EAAE;AADa,KAA1B;AAIH;AACJ,CAPM,C,CASP;;AACA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACT,GAAD,EAAS;AAC9B,MAAIE,OAAO,CAACC,OAAZ,EAAqB;AACjBI,IAAAA,MAAM,CAACG,GAAP,CAAWV,GAAX,EAAgB,EAAhB;AAIH;AACJ,CAPM,C,CAUP;;AACA,OAAO,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACX,GAAD,EAAMC,KAAN,EAAgB;AAC3C,MAAGC,OAAO,CAACC,OAAX,EAAoB;AAChBS,IAAAA,YAAY,CAACC,OAAb,CAAqBb,GAArB,EAA0B,gBAAeC,KAAf,CAA1B;AACH;AACJ,CAJM,C,CAOP","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport {API} from '../config';\n\n\n// create signup a new user\nexport const signup = (user) => {\n\n    return fetch(`${API}/signup`,{\n\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json()\n        })\n        .catch(err => console.log(err));\n};\n\n// create signin a new user\nexport const signin = (user) => {\n\n    return fetch(`${API}/signin`,{\n\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json()\n        })\n        .catch(err => console.log(err));\n};\n\n//. set cookie\nexport const setCookie = (key, value) => {\n    if (process.browser) {\n        setCookie.set(key, value, {\n            expires: 1,\n        });\n\n    }\n};\n\nexport const removeCookie = (key) => {\n    if (process.browser) {\n        Cookie.remove.remove(key, {\n            expires: 1,\n        });\n        \n    }\n};\n\n//. get cookie\nexport const getCookie = (key) => {\n    if (process.browser) {\n        Cookie.get(key, {\n            \n        });\n        \n    }\n};\n\n\n//  localStorage\nexport const setLocalStorage = (key, value) => {\n    if(process.browser) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n}\n\n\n// autheticate user by pass data to cookie and localstorage"]},"metadata":{},"sourceType":"module"}
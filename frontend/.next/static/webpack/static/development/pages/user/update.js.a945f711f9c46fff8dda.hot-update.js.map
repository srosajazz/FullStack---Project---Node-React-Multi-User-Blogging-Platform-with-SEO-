{"version":3,"file":"static/webpack/static/development/pages/user/update.js.a945f711f9c46fff8dda.hot-update.js","sources":["webpack:///./components/auth/ProfileUpdate.js"],"sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n    const [values, setValues] = useState({\n        username: '',\n        name: '',\n        email: '',\n        about: '',\n        password: '',\n        error: false,\n        success: false,\n        loading: false,\n        photo: '',\n        userData: ''\n    });\n\n    const token = getCookie('token');\n    const { username, name, email, about, password, error, success, loading, photo, userData } = values;\n\n    const init = () => {\n        getProfile(token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => e => {\n        // console.log(e.target.value);\n        const value = name === 'photo' ? e.target.files[0] : e.target.value;\n        let userFormData = new FormData();\n        userFormData.set(name, value);\n        setValues({ ...values, [name]: value, userData: userFormData, error: false, success: false });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setValues({ ...values, loading: true });\n        update(token, userData).then(data => {\n            if (data.error) {\n                setValues({ \n                    ...values,\n                     error: data.error,\n                      success: false,\n                       loading: false });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about,\n                    password: '',\n                    success: true,\n                    loading: false\n                });\n            }\n        });\n    };\n\n    const profileUpdateForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"btn btn-outline-info\">\n                    Profile photo\n                    <input onChange={handleChange('photo')} type=\"file\" accept=\"image/*\" hidden />\n                </label>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Username</label>\n                <input onChange={handleChange('username')} type=\"text\" value={username} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" value={name} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={handleChange('email')} type=\"text\" value={email} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">About</label>\n                <textarea onChange={handleChange('about')} type=\"text\" value={about} className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={handleChange('password')} type=\"password\" value={password} className=\"form-control\" />\n            </div>\n            <div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    );\n\n    //Shoe error messages\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{display:error ? '' : 'none'}}>\n            All fields are required\n        </div>\n    )\n\n\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">image</div>\n                    <div className=\"col-md-8 mb-5\">{profileUpdateForm()}</div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileUpdate;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AADA;AAAA;AACA;AAaA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgmCA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}